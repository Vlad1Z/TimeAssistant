from telebot import TeleBot, types
from config import TELEBOT_TOKEN, id_chat_owner
from handlers.StartHandler import StartHandler
from handlers.BookingHandler import BookingHandler
from CalendarHandler.MainMenuHandler import MainMenuHandler
from CalendarHandler.UnlockTimeHandler import UnlockTimeHandler
from CalendarHandler.BookingListHandler import BookingListHandler

bot = TeleBot(TELEBOT_TOKEN)

# –≠–∫–∑–µ–º–ø–ª—è—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
start_handler = StartHandler(bot)
booking_handler = BookingHandler(bot)
main_menu_handler = MainMenuHandler(bot)
unlock_handler = UnlockTimeHandler(bot, booking_handler)
bookings_handler = BookingListHandler(bot, booking_handler)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    @bot.message_handler(commands=['start'])
    def handle_start(message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –æ—Ç–ø—Ä–∞–≤–ª—è—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            –∏ –æ—Ç–æ–±—Ä–∞–∂–∞—è –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º is_welcome=True."""
        start_handler.handle(message, is_welcome=True)

    @bot.message_handler(commands=['help'])
    def handle_help(message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help, –æ—Ç–ø—Ä–∞–≤–ª—è—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
        start_handler.send_help_message(message)

    @bot.message_handler(func=lambda message: message.text in ['üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è', 'üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', 'üíÜ‚Äç‚ôÄÔ∏è –ù–∞—à–∏ —É—Å–ª—É–≥–∏', 'üïí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è'])
    def handle_main_menu(message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
        if message.text == 'üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è':
            booking_handler.handle(message)
        elif message.text == 'üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏':
            # –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
            bot.send_message(message.chat.id, "–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: ...")
        elif message.text == 'üíÜ‚Äç‚ôÄÔ∏è –ù–∞—à–∏ —É—Å–ª—É–≥–∏':
            # –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
            bot.send_message(message.chat.id, "–ù–∞—à–∏ —É—Å–ª—É–≥–∏: ...")
        elif message.text == 'üïí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è' and str(message.chat.id) == id_chat_owner:
            main_menu_handler.handle_calendar(message)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('type_'))
    def handle_type(call):
        booking_type = call.data.split('_')[1]
        booking_handler.show_available_slots(call, booking_type)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('date_'))
    def handle_date(call):
        date = call.data.split('_')[1]
        booking_handler.show_times(call, date)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('time_'))
    def handle_time(call):
        _, date, time = call.data.split('_')
        booking_handler.book_time(call, date, time)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('unlock_date_'))
    def handle_unlock_date(call):
        print(f"handle_unlock_date called with data: {call.data}")
        date = call.data.split('_')[2]
        unlock_handler.show_unlock_times(call, date)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('unlock_time_'))
    def handle_unlock_time_slots(call):
        print(f"handle_unlock_time_slots called with data: {call.data}")
        parts = call.data.split('_')
        date = parts[2]
        time = parts[3]
        unlock_handler.unlock_time(call, date, time)

    @bot.callback_query_handler(func=lambda call: call.data == 'unlock_time')
    def handle_unlock_time(call):
        print("handle_unlock_time called")
        unlock_handler.show_unlock_dates(call)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('done_unlock_'))
    def handle_done_unlock(call):
        print(f"handle_done_unlock called with data: {call.data}")
        date = call.data.split('_')[2]
        unlock_handler.confirm_unlock(call, date)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('back_to_unlock_dates'))
    def handle_back_to_unlock_dates(call):
        print(f"handle_back_to_unlock_dates called with data: {call.data}")
        date = call.data.split('_')[2]
        unlock_handler.show_unlock_dates(call)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('back_to_calendar'))
    def handle_back_to_calendar(call):
        print("handle_back_to_calendar called")
        main_menu_handler.handle_calendar(call.message)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    @bot.callback_query_handler(func=lambda call: call.data == 'clear_schedule')
    def handle_clear_schedule(call):
        print("handle_clear_schedule called")
        unlock_handler.clear_schedule(call)

    @bot.callback_query_handler(func=lambda call: call.data == 'back_to_main')
    def handle_back_to_main(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' –≤ –º–µ–Ω—é '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è'."""
        start_handler.handle(call.message, is_welcome=False)

    @bot.callback_query_handler(func=lambda call: call.data == 'handle_calendar')
    def handle_calendar(call):
        main_menu_handler.handle_calendar(call.message)
        markup = types.InlineKeyboardMarkup()
        unlock_button = types.InlineKeyboardButton(text="–û—Å–≤–æ–±–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –ø–æ–¥ –∑–∞–ø–∏—Å–∏", callback_data='unlock_time')
        get_bookings_button = types.InlineKeyboardButton(text="–ü—Ä–∏—Å–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π", callback_data='get_bookings')
        clear_schedule_button = types.InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data='clear_schedule')
        back_button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_main')
        markup.add(unlock_button)
        markup.add(get_bookings_button)
        markup.add(clear_schedule_button)
        markup.add(back_button)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


register_handlers()

bot.polling(none_stop=True)
