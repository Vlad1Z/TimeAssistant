import logging
from telebot import TeleBot
from telebot import types
import config
from handlers.StartHandler import StartHandler
from handlers.BookingHandler import BookingHandler
from handlers.UserRequestHandler import UserRequestHandler
from handlers.ProceduresHandler import ProceduresHandler
from handlers.UserStatisticsHandler import (
    UniqueUsersStatisticsHandler,
    RepeatVisitsStatisticsHandler,
    InactiveUsersStatisticsHandler,
    VisitedSectionsStatisticsHandler,
    BaseStatisticsHandler
)
from handlers.RecordsHandler import RecordsHandler
from handlers.SocialMediaHandler import SocialMediaHandler
from db import save_user_visit, get_user_data_by_record_id, update_appointment, get_records_from_today
from handlers.Logger import log_action


# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logging.info("Bot is starting...")

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –∏–∑ config.py
bot = TeleBot(config.TELEBOT_TOKEN)

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ config.py
ADMIN_CHAT_ID = int(config.id_chat_owner)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
start_handler = StartHandler(bot)
booking_handler = BookingHandler(bot, start_handler)
user_request_handler = UserRequestHandler(bot, ADMIN_CHAT_ID)
procedures_handler = ProceduresHandler(bot, ADMIN_CHAT_ID)
records_handler = RecordsHandler(bot)
social_media_handler = SocialMediaHandler(bot)

# –∏–∑ —Ñ–∞–π–ª–∞ UserStatisticsHandler.py
unique_users_handler = UniqueUsersStatisticsHandler(bot)
repeat_visits_handler = RepeatVisitsStatisticsHandler(bot)
inactive_users_handler = InactiveUsersStatisticsHandler(bot)
visited_sections_handler = VisitedSectionsStatisticsHandler(bot)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
@log_action(action_type="start_command", action_details="–ó–∞–ø—É—Å—Ç –±–æ—Ç–∞")
def handle_start(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –±–æ—Ç–æ–º)."""
    start_handler.main_menu(message)

@bot.message_handler(func=lambda message: message.text == "üôè –°–ø–∞—Å–∏–±–æ, –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ")
@log_action(action_type="menu_click", action_details="–°–ø–∞—Å–∏–±–æ, –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ")
def handle_exit(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–°–ø–∞—Å–∏–±–æ, –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ'."""
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ó–∞–ø—É—Å—Ç–∏—Ç—å"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å")
    markup.add(button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(
        message.chat.id,
        "üíñ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º! –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä\n\n"
        "üöÄ –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–ø—É—Å—Ç–∏—Ç—å'.",
        reply_markup=markup  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

@bot.message_handler(func=lambda message: message.text == "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å")
@log_action(action_type="button_click", action_details="–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –±–æ—Ç–∞")
def handle_restart(message):
    start_handler.main_menu(message)

@bot.callback_query_handler(func=lambda call: call.data.startswith("record_"))
def handle_admin_booking(call):
    # –í–∞—à –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å'."""
    try:
        record_id = int(call.data.split("_")[-1])  # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–ø–∏—Å–∏ –∏–∑ callback_data
        print(f"Callback data received: {call.data}, record ID: {record_id}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        from db import check_appointment_exists
        if not check_appointment_exists(record_id):
            bot.answer_callback_query(call.id, "‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.")
            return

        bot.answer_callback_query(call.id, "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞!")
        booking_handler.start_admin_booking(call, record_id)  # –ü–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ BookingHandler
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ callback_query: {e}")

@bot.callback_query_handler(func=lambda call: call.data in ["confirm_booking", "cancel_booking"])
def handle_booking_confirmation(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏."""
    bot.answer_callback_query(call.id)  # –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫ –∫–∞–∫–æ–º—É –¥–µ–π—Å—Ç–≤–∏—é –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –Ω–∞–∂–∞—Ç–∞—è –∫–Ω–æ–ø–∫–∞
    action = "confirm" if call.data == "confirm_booking" else "cancel"
    record_id = booking_handler.current_record_id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    user_data = get_user_data_by_record_id(record_id)

    if not user_data:
        bot.send_message(
            call.message.chat.id,
            "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        )
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å record_id {record_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ message_id –∑–∞—è–≤–∫–∏
    message_id_request = user_data.get("message_id")
    if message_id_request:
        try:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞—è–≤–∫–æ–π
            bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_request)
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å message_id {message_id_request} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞—è–≤–∫–æ–π: {e}")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    if action == "confirm":
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        update_appointment(
            user_id=record_id,
            appointment_date=booking_handler.selected_date.strftime('%Y-%m-%d'),
            appointment_time=booking_handler.selected_time,
            status="–ó–∞–ø–∏—Å–∞–Ω",
            comment=booking_handler.comments
        )
        updated_message = (
            "‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n\n"
            f"üë§ –ò–º—è: {user_data.get('first_name', '')} {user_data.get('last_name', '')}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data.get('phone_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üìß Username: @{user_data.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: <code>{user_data.get('telegram_user_id', '–ù–µ —É–∫–∞–∑–∞–Ω')}</code>\n\n"
            f"üìÖ –î–∞—Ç–∞: {booking_handler.selected_date.strftime('%d.%m.%y')}\n"
            f"‚è∞ –í—Ä–µ–º—è: {booking_handler.selected_time}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {booking_handler.comments if booking_handler.comments else '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}"
        )

    elif action == "cancel":
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        update_appointment(
            user_id=record_id,
            appointment_date=None,
            appointment_time=None,
            status="–û—Ç–∫–ª–æ–Ω–µ–Ω–∞",
            comment=None
        )
        updated_message = (
            f"‚ùå –ó–∞—è–≤–∫–∞ ‚Ññ{record_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!\n\n"
            f"üë§ –ò–º—è: {user_data['first_name']} {user_data['last_name']}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone_number']}\n"
            f"üìß Username: @{user_data['username']}\n"
            f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: <code>{user_data['telegram_user_id']}</code>"
        )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=updated_message,
            parse_mode="HTML"
        )
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ ‚Ññ{record_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


def process_cancel_booking(record_id, call=None):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏.
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ record_id
    user_data = get_user_data_by_record_id(record_id)

    if not user_data:
        if call:
            bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    update_appointment(
        user_id=record_id,
        appointment_date=None,
        appointment_time=None,
        status="–û—Ç–∫–ª–æ–Ω–µ–Ω–∞",
        comment=None
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    updated_message = (
        f"‚ùå –ó–∞–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞! (–ó–∞—è–≤–∫–∞ ‚Ññ{record_id})\n\n"
        f"üë§ –ò–º—è: {user_data['first_name']} {user_data['last_name']}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone_number']}\n"
        f"üìß Username: @{user_data['username']}\n"
        f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: <code>{user_data['telegram_user_id']}</code>\n"
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=updated_message,
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")



@bot.callback_query_handler(func=lambda call: call.data.startswith("cancel_"))
def handle_cancel_booking(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–∫–ª–æ–Ω–∏—Ç—å'."""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º record_id
        record_id = int(call.data.split("_")[1])

        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ process_cancel_booking —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º
        process_cancel_booking(record_id=record_id, call=call)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏: {e}")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(func=lambda message: message.text == "üìù –ó–∞–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞")
def handle_booking(message):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
    booking_handler.start_booking(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏
@bot.message_handler(func=lambda message: message.text in ["‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"])
def handle_confirmation(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    booking_handler.process_action(message)


@bot.message_handler(func=lambda message: message.text == "üìÖ –£–∑–Ω–∞—Ç—å –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–∞—Ö")
@log_action(action_type="menu_click", action_details="–£–∑–Ω–∞—Ç—å –æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–∞—Ö")
def handle_user_request(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_request_handler.start_request(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
@bot.message_handler(content_types=['contact'])
@log_action(action_type="button_click", action_details="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
def handle_contact_message(message):
    """–ü–µ—Ä–µ–¥–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ UserRequestHandler."""
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print("Contact received:", message.contact)

    # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ UserRequestHandler
    user_request_handler.handle_contact(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–∏–¥—ã –ø—Ä–æ—Ü–µ–¥—É—Ä"
@bot.message_handler(func=lambda message: message.text == "‚ú® –í–∏–¥—ã –ø—Ä–æ—Ü–µ–¥—É—Ä")
@log_action(action_type="menu_click", action_details="–í–∏–¥—ã –ø—Ä–æ—Ü–µ–¥—É—Ä")
def handle_procedures(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–í–∏–¥—ã –ø—Ä–æ—Ü–µ–¥—É—Ä'."""
    procedures_handler.show_procedures(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä
@bot.callback_query_handler(func=lambda call: call.data == "book_procedure")
def handle_procedure_booking(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' –≤ –≤–∏–¥–∞—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä."""
    procedures_handler.handle_booking_procedure(call)

@bot.callback_query_handler(func=lambda call: call.data == "get_contact")
@log_action(action_type="button_click", action_details="–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ")
def handle_get_contact(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ '–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ'."""
    procedures_handler.handle_booking_procedure(call)

@bot.message_handler(func=lambda message: message.text == "üìã –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∑–∞–ø–∏—Å–∏")
def handle_show_records(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ '–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∑–∞–ø–∏—Å–∏'."""
    bot.delete_message(message.chat.id, message.message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    records_handler.show_records(message)

@bot.message_handler(func=lambda message: message.text == "üåê –î—Ä—É–≥–∏–µ —Å–æ—Ü —Å–µ—Ç–∏")
@log_action(action_type="button_click", action_details="–î—Ä—É–≥–∏–µ —Å–æ—Ü —Å–µ—Ç–∏")
def handle_social_media(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î—Ä—É–≥–∏–µ —Å–æ—Ü —Å–µ—Ç–∏'."""
    social_media_handler.show_social_media(message)









@bot.message_handler(func=lambda message: message.text == "üë• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
def handle_view_users(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'."""
    bot.delete_message(message.chat.id, message.message_id)
    # –û–±—â–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    base_statistics_handler = BaseStatisticsHandler(bot)
    base_statistics_handler.show_statistics(message)

@bot.callback_query_handler(func=lambda call: call.data == "unique_users")
def handle_unique_users(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    bot.answer_callback_query(call.id)
    unique_users_handler.pending_section[call.message.chat.id] = "unique_users"
    unique_users_handler.request_date_range_unique_user(call)

@bot.callback_query_handler(func=lambda call: call.data == "repeat_visits")
def handle_repeat_visits(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ—Å–µ—â–µ–Ω–∏—è."""
    bot.answer_callback_query(call.id)
    repeat_visits_handler.handle_statistics(call)

@bot.callback_query_handler(func=lambda call: call.data == "inactive_users")
def handle_inactive_users(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    bot.answer_callback_query(call.id)
    inactive_users_handler.pending_section[call.message.chat.id] = "inactive_users"
    inactive_users_handler.request_date_range_inactive_users(call)

@bot.callback_query_handler(func=lambda call: call.data == "section_stats")
def handle_visited_sections(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—Å–µ—â—ë–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã."""
    bot.answer_callback_query(call.id)
    visited_sections_handler.handle_statistics(call)

@bot.callback_query_handler(func=lambda call: call.data == "back_to_menu")
def handle_back_to_menu(call):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    base_statistics_handler = BaseStatisticsHandler(bot)
    base_statistics_handler.handle_back_to_menu(call)

@bot.message_handler(content_types=['text'])
def handle_text_message(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –±–æ—Ç –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.chat.id in inactive_users_handler.pending_section:
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        inactive_users_handler.process_date_input_inactive_users(message)
    elif message.chat.id in unique_users_handler.pending_section:
        # –ó–∞—Ç–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        unique_users_handler.process_date_input_unique_users(message)
    else:
        bot.send_message(
            message.chat.id,
            "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é.",
            parse_mode="HTML"
        )



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logging.error(f"Error occurred: {e}")
