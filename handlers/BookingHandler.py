from telebot import types
from datetime import datetime
from db import save_appointment
from config import id_chat_owner
from db import update_appointment
from db import get_user_data_by_record_id




class BookingHandler:
    def __init__(self, bot, start_handler):
        self.bot = bot
        self.start_handler = start_handler  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ start_handler
        self.selected_date = None
        self.selected_time = None
        self.comments = None

    def start_booking(self, message):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
        self.bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ üóìÔ∏è"
        )
        self.bot.register_next_step_handler(message, self.handle_date_selection)

    def start_admin_booking(self, call, record_id):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞."""
        self.current_record_id = record_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π ID –∑–∞–ø–∏—Å–∏
        self.bot.send_message(
            call.message.chat.id,
            "üìÖ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì):"
        )
        self.bot.register_next_step_handler(call.message, self.process_admin_date)

    def process_admin_date(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –¥–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
        try:
            self.selected_date = datetime.strptime(message.text, '%d.%m.%y').date()
            if self.selected_date < datetime.today().date():
                raise ValueError("–î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º.")
            self.bot.send_message(
                message.chat.id,
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {self.selected_date.strftime('%d.%m.%y')} üóìÔ∏è. –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú):"
            )
            self.bot.register_next_step_handler(message, self.process_admin_time)
        except ValueError:
            self.bot.send_message(
                message.chat.id,
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –¥–∞—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º. –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì."
            )
            self.bot.register_next_step_handler(message, self.process_admin_date)

    def process_admin_time(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
        try:
            self.selected_time = message.text
            datetime.strptime(self.selected_time, '%H:%M')  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
            self.bot.send_message(
                message.chat.id,
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: {self.selected_time} ‚è∞. –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∏–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã):"
            )
            self.bot.register_next_step_handler(message, self.process_admin_comment)
        except ValueError:
            self.bot.send_message(
                message.chat.id,
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú. –ù–∞–ø—Ä–∏–º–µ—Ä: 09:00."
            )
            self.bot.register_next_step_handler(message, self.process_admin_time)

    def process_admin_comment(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ."""
        self.comments = message.text

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
        from db import get_user_data_by_record_id
        user_data = get_user_data_by_record_id(self.current_record_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—à–ª–∏ –ª–∏ –¥–∞–Ω–Ω—ã–µ
        if not user_data:
            self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile_data = (
            f"üì© –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–∏—Å—å:\n"
            f"üë§ –ò–º—è: {user_data['first_name'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} {user_data['last_name'] or ''}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone_number'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìß Username: {user_data['username'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üÜî ID –∫–ª–∏–µ–Ω—Ç–∞: {user_data['telegram_user_id']}\n\n"
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        admin_input_data = (
            f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
            f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comments}\n\n"
        )

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å—ë –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        confirmation_message = (
            f"{profile_data}"
            f"–î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏:\n"
            f"{admin_input_data}"
            "‚úÖ –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å, –∏–ª–∏ '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', —á—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è."
        )

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")

        self.bot.send_message(
            message.chat.id,
            confirmation_message,
            reply_markup=markup
        )
        self.bot.register_next_step_handler(message, self.finalize_admin_booking)

    def finalize_admin_booking(self, message):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å."""
        markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

        if message.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
            update_appointment(
                user_id=self.current_record_id,
                appointment_date=self.selected_date.strftime('%Y-%m-%d'),
                appointment_time=self.selected_time,
                status="–ó–∞–ø–∏—Å–∞–Ω",
                comment=self.comments
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            self.bot.send_message(
                message.chat.id,
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {self.current_record_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω!",
                reply_markup=markup  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = get_user_data_by_record_id(self.current_record_id)
            if user_data:
                self.bot.send_message(
                    user_data["telegram_user_id"],
                    f"üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!\n\n"
                    f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
                    f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
                    f"üìç –ê–¥—Ä–µ—Å: [–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å]\n"
                    f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: [–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω]\n\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–∏—Å—å! üòä"
                )
        elif message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            self.bot.send_message(
                message.chat.id,
                "‚ùå –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                reply_markup=markup  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )
        else:
            self.bot.send_message(
                message.chat.id,
                "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' –∏–ª–∏ '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å'.",
                reply_markup=markup  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )

    def handle_time_selection(self, message):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏."""
        self.selected_time = message.text
        try:
            datetime.strptime(self.selected_time, '%H:%M')
            self.bot.send_message(
                message.chat.id,
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: {self.selected_time} ‚è∞. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∏–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã). ‚úçÔ∏è"
            )
            self.bot.register_next_step_handler(message, self.handle_comments)
        except ValueError:
            self.bot.send_message(
                message.chat.id,
                "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú. –ù–∞–ø—Ä–∏–º–µ—Ä: 09:00 ‚è∞"
            )
            self.bot.register_next_step_handler(message, self.handle_time_selection)

    def handle_comments(self, message):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ."""
        self.comments = message.text
        confirmation_message = (
            f"üì© –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏:\n\n"
            f"üë§ –ò–º—è: {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} {message.from_user.last_name or ''}\n"
            f"üìß Username: {message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üÜî Telegram ID: {message.from_user.id}\n"
            f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
            f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comments}\n\n"
            "‚úÖ –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å, –∏–ª–∏ '–û—Ç–º–µ–Ω–∏—Ç—å', —á—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è."
        )
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")

        self.bot.send_message(
            message.chat.id,
            confirmation_message,
            reply_markup=markup
        )
        self.bot.register_next_step_handler(message, self.final_confirmation)

    def final_confirmation(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏."""
        if message.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            save_appointment(
                user_id=message.from_user.id,
                username=message.from_user.username,
                first_name=message.from_user.first_name,
                last_name=message.from_user.last_name,
                phone_number=None,  # –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
                date=self.selected_date.strftime('%Y-%m-%d'),
                time=self.selected_time,
                comments=self.comments,
                status='–ó–∞–ø–∏—Å–∞–Ω'
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            self.bot.send_message(
                id_chat_owner,
                f"‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞:\n\n"
                f"üë§ –ò–º—è: {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} {message.from_user.last_name or ''}\n"
                f"üìß Username: {message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
                f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
                f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comments}\n"
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.bot.send_message(
                message.chat.id,
                f"üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!\n\n"
                f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
                f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
                f"üìç –ê–¥—Ä–µ—Å: [–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å]\n"
                f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: [–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω]\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–∏—Å—å! üòä"
            )

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            self.start_handler.main_menu(message)
        elif message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            self.handle_cancel(message)
        else:
            self.bot.send_message(
                message.chat.id,
                "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ù–∞–∂–º–∏—Ç–µ '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' –∏–ª–∏ '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å'."
            )
            self.bot.register_next_step_handler(message, self.final_confirmation)

    def process_action(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å, –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –û—Ç–º–µ–Ω–∏—Ç—å."""
        action = message.text

        if action == "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å":
            self.handle_save(message)
        elif action == "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å":
            self.handle_edit(message)
        elif action == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            self.handle_cancel(message)

    def handle_save(self, message):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É."""
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        save_appointment(
            user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            phone_number=None,
            # –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∞–ª —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, –µ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.
            date=self.selected_date.strftime('%d.%m.%y'),
            time=self.selected_time,
            comments=self.comments,
            status='–ó–∞–ø–∏—Å–∞–Ω'
            # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–∫ '–ó–∞–ø–∏—Å–∞–Ω', –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å—Ç–∞—Ç—É—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏.
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        self.bot.send_message(
            id_chat_owner,  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
            f"üì© –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å: \n–î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n–í—Ä–µ–º—è: {self.selected_time}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {self.comments} üìù"
        )

        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! ‚úÖ\n\n–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:\n"
            f"–î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
            f"–í—Ä–µ–º—è: {self.selected_time}\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {self.comments} üìù"
        )

        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é... üè†",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.start_handler.main_menu(message)  # –í—ã–∑—ã–≤–∞–µ–º main_menu —á–µ—Ä–µ–∑ start_handler

    def handle_cancel(self, message):
        """–û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å."""
        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå"
        )

        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        self.bot.send_message(
            message.chat.id,
            "–û—Ç–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é... üè†",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.start_handler.main_menu(message)  # –í—ã–∑—ã–≤–∞–µ–º main_menu —á–µ—Ä–µ–∑ start_handler

    def handle_edit(self, message):
        """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª–µ: –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π."""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", "üí¨ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
        self.bot.send_message(
            message.chat.id,
            "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å?",
            reply_markup=markup
        )
        self.bot.register_next_step_handler(message, self.process_edit_choice)

    def process_edit_choice(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–æ–≥–æ, —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å."""
        if message.text == "üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É (—Ñ–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì) üóìÔ∏è"
            )
            self.bot.register_next_step_handler(message, self.handle_date_selection)

        elif message.text == "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è (—Ñ–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú) ‚è∞"
            )
            self.bot.register_next_step_handler(message, self.handle_time_selection)

        elif message.text == "üí¨ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π üìù"
            )
            self.bot.register_next_step_handler(message, self.handle_comments)
