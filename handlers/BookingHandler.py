from telebot import types
from datetime import datetime
from db import save_appointment


class BookingHandler:
    def __init__(self, bot, start_handler):
        self.bot = bot
        self.start_handler = start_handler  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ start_handler
        self.selected_date = None
        self.selected_time = None
        self.comments = None

    def start_booking(self, message):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
        self.bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ üóìÔ∏è"
        )
        self.bot.register_next_step_handler(message, self.handle_date_selection)

    def handle_date_selection(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–∞—Ç—ã."""
        try:
            self.selected_date = datetime.strptime(message.text, '%d.%m.%y').date()
            if self.selected_date < datetime.today().date():
                raise ValueError("–î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º.")
            self.bot.send_message(
                message.chat.id,
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {self.selected_date.strftime('%d.%m.%y')} üóìÔ∏è. –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è ‚è∞."
            )
            self.bot.register_next_step_handler(message, self.handle_time_selection)
        except ValueError as e:
            error_message = str(e) if str(e) else "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì."
            self.bot.send_message(
                message.chat.id,
                error_message + " ‚ùå"
            )
            self.bot.register_next_step_handler(message, self.handle_date_selection)

    def handle_time_selection(self, message):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏."""
        self.selected_time = message.text
        try:
            datetime.strptime(self.selected_time, '%H:%M')
            self.bot.send_message(
                message.chat.id,
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: {self.selected_time} ‚è∞. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∏–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã). ‚úçÔ∏è"
            )
            self.bot.register_next_step_handler(message, self.handle_comments)
        except ValueError:
            self.bot.send_message(
                message.chat.id,
                "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú. –ù–∞–ø—Ä–∏–º–µ—Ä: 09:00 ‚è∞"
            )
            self.bot.register_next_step_handler(message, self.handle_time_selection)

    def handle_comments(self, message):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –≤–∏–¥ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã."""
        self.comments = message.text
        confirmation_message = (
            f"üìÖ –î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
            f"‚è∞ –í—Ä–µ–º—è: {self.selected_time}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {self.comments}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")

        self.bot.send_message(
            message.chat.id,
            confirmation_message,
            reply_markup=markup
        )

    def process_action(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å, –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –û—Ç–º–µ–Ω–∏—Ç—å."""
        action = message.text

        if action == "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å":
            self.handle_save(message)
        elif action == "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å":
            self.handle_edit(message)
        elif action == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            self.handle_cancel(message)

    def handle_save(self, message):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å."""
        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! ‚úÖ\n\n–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:\n"
            f"–î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n"
            f"–í—Ä–µ–º—è: {self.selected_time}\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {self.comments} üìù"
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        self.bot.send_message(
            message.chat.id,
            f"üì© –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å: \n–î–∞—Ç–∞: {self.selected_date.strftime('%d.%m.%y')}\n–í—Ä–µ–º—è: {self.selected_time}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {self.comments} üìù"
        )

        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é... üè†",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.start_handler.main_menu(message)  # –í—ã–∑—ã–≤–∞–µ–º main_menu —á–µ—Ä–µ–∑ start_handler

    def handle_cancel(self, message):
        """–û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å."""
        self.bot.send_message(
            message.chat.id,
            "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå"
        )

        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        self.bot.send_message(
            message.chat.id,
            "–û—Ç–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é... üè†",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.start_handler.main_menu(message)  # –í—ã–∑—ã–≤–∞–µ–º main_menu —á–µ—Ä–µ–∑ start_handler

    def handle_edit(self, message):
        """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª–µ: –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π."""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", "üí¨ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
        self.bot.send_message(
            message.chat.id,
            "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å?",
            reply_markup=markup
        )
        self.bot.register_next_step_handler(message, self.process_edit_choice)

    def process_edit_choice(self, message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–æ–≥–æ, —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å."""
        if message.text == "üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É (—Ñ–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì) üóìÔ∏è"
            )
            self.bot.register_next_step_handler(message, self.handle_date_selection)

        elif message.text == "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è (—Ñ–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú) ‚è∞"
            )
            self.bot.register_next_step_handler(message, self.handle_time_selection)

        elif message.text == "üí¨ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π":
            self.bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π üìù"
            )
            self.bot.register_next_step_handler(message, self.handle_comments)
